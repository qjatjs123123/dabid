spring:
  application:
    name: dabid

  # Elasticsearch
  elasticsearch:
    rest:
      uris: http://elasticsearch:9200

  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 10MB

  # Scheduler ThreadCount
  quartz:
    properties:
      org.quartz.threadPool.threadCount: 20

  # MySQL
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    url: jdbc:mysql://172.31.76.123:3306/dabid

    password: dabid
  # SQL Encoding
  sql:
    init:
      encoding: UTF-8
      mode: always

  #JPA
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
    database: mysql
    hibernate:
      ddl-auto: update
    show-sql: 'true'
  #Security
  security:
    user:
      name: admin
      password: dabid
  #MongoDB
  data:
    mongodb:
      uri: mongodb://root:dabid@172.31.76.123:27017/dabid?authSource=admin

  kafka:
    bootstrap-servers: localhost:9092  # Kafka 서버 주소
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      retries: 3                        # 메시지 전송 실패 시 재시도 횟수
      acks: all                         # 모든 리더와 팔로워로부터 ack를 받을 때 성공 처리
    consumer:
      group-id: dabid-group              # Kafka 컨슈머 그룹 ID
      auto-offset-reset: earliest       # 오프셋 리셋 설정
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      enable-auto-commit: false         # 오프셋 자동 커밋 비활성화 (수동 커밋)
      max-poll-records: 500             # 한 번에 가져올 최대 메시지 수
    template:
      default-topic: dabid-topic         # 미리 생성된 Kafka 토픽 이름

mybatis:
  mapper-locations: classpath:mapper/*.xml

jwt:
  key: /PrvvKm+CrnZUHBxKhqQNzhvN0QxnhGB1OzR1tV19yM=
  access:
    time: 10800
  refresh:
    time: 2592000

cloud:
  aws:
    credentials:
      access-key: AKIA6GBMGEM7RJN3IVWT
      secret-key: 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
    s3:
      bucket: dabid-bucket
    region:
      static: ap-northeast-2
    stack:
      auto: false

server:
  servlet:
    encoding:
      enabled: 'true'

management:
  server:
    port: 8080
  endpoints:
    web:
      exposure:
        include: "*"
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: dabid

point:
  buy:
    deposit: 5000


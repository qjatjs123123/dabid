spring:
  application:
    name: dabid

  # Elasticsearch
  elasticsearch:
    rest:
      uris: 13.124.170.198:9200

  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 10MB

  # Scheduler ThreadCount
  quartz:
    properties:
      org.quartz.threadPool.threadCount: 20

  # MySQL
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    url: jdbc:mysql://13.124.170.198:3306/dabid?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
    password: dabid

  # SQL Encoding
  sql:
    init:
      encoding: UTF-8
      mode: always

  #JPA
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
    database: mysql
    hibernate:
      ddl-auto: update
    show-sql: 'true'

  #Security
  security:
    user:
      name: admin
      password: dabid

  data:
    redis:
      host: 13.124.170.198
      port: 6379
      password: dabid
      # url: jdbc:redis://root:dabid@172.19.63.93:6379
    mongodb:
      uri: mongodb://root:dabid@13.124.170.198:27017/dabid?authSource=admin

  kafka:
    bootstrap-servers: 13.124.170.198:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      retries: 3
      acks: all
    consumer:
      group-id: dabid-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      enable-auto-commit: false
      max-poll-records: 500
      properties:
        spring:
          json:
            trusted:
              packages: "*"  # 신뢰할 패키지 (추후수정) "com.ssafy.dabid.domain.deal.entity"
      value-deserializer.delegate: org.springframework.kafka.support.serializer.JsonDeserializer  # JsonDeserializer 위임
    template:
      default-topic: dabid-topic

mybatis:
  mapper-locations: classpath:mapper/*.xml

jwt:
  key: /PrvvKm+CrnZUHBxKhqQNzhvN0QxnhGB1OzR1tV19yM=
  access:
    time: 10800
  refresh:
    time: 2592000

cloud:
  aws:
    credentials:
      access-key: AKIA6GBMGEM7RJN3IVWT
      secret-key: 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
    s3:
      bucket: dabid-bucket
    region:
      static: ap-northeast-2
    stack:
      auto: false

server:
  servlet:
    encoding:
      enabled: 'true'

management:
  server:
    port: 8080
  endpoints:
    web:
      exposure:
        include: "*"
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: dabid

point:
  buy:
    deposit: 5000

#logging:
#  level:
#    org:
#      springframework:
#        web: DEBUG

